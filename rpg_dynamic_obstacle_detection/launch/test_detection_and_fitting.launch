<launch>
  <!-- DVS Dynamic Object detection -->
  <group ns="sees">
    <node pkg="rpg_dynamic_obstacle_detection" type="dynamic_obstacle_detection" name="dynamic_obstalce_detection" output="screen">
      <rosparam file="$(find rpg_dynamic_obstacle_detection)/parameters/parameters.yaml" />
      <param name="calib_file" value="$(find rpg_dynamic_obstacle_detection)/../calibration/calib_sees.yaml" />
      <remap from="/sees/events" to="/dvs/events" />
      <remap from="/sees/imu" to="/dvs/imu" />
    </node>
  </group>
  <!-- RANSAC Parabola fitting on ballistic trajectory -->
  <node output="screen" name="ransac_node" pkg="rpg_ransac_parabola" type="parabola_ransac_node.py"/>
  <node pkg="tf" type="static_transform_publisher" name="tf_map" args="0 0 0 0 0 0 1 world map 100"/>
  <node pkg="tf" type="static_transform_publisher" name="tf_odom" args="0 0 0 0 0 0 1 world odom 100"/>
  <node pkg="tf" type="static_transform_publisher" name="tf_cam" args="0 0 0 0 0 0 1 world cam_frame 100"/>
  <node type="rviz" name="rviz" pkg="rviz" args="-d $(find rpg_ransac_parabola)/rviz/ransac_visualization.rviz" />
  <!-- Play a recorded .bag of /dvs/events and /dvs/imu messages to test -->
  <node pkg="rosbag" type="play" name="demo_player" output="screen" args="--clock $(find rpg_dynamic_obstacle_detection)/bags/ball_throw_test_1.bag"/>
</launch>
